{"version":3,"file":"chip8.js","sources":["constants.ts","program_counter.ts","operations.ts","vm.ts","chip8.ts"],"sourcesContent":["export const enum SIZE {\n  RAM_SIZE = 0x1000,\n  STACK_SIZE = 0x10,\n  KEY_SIZE = 0x10,\n  REGISTER_SIZE = 0x10,\n  FONT_WIDTH = 0x5,\n  SCREEN_WIDTH = 0x40,\n  SCREEN_HEIGHT = 0x20,\n  SCREEN_SIZE = SCREEN_WIDTH * SCREEN_HEIGHT\n}\n\nexport const enum OFFSET {\n  PROGRAM_START = 0x200\n}\n\nexport const FONT = new Uint8Array([\n  0xF0, 0x90, 0x90, 0x90, 0xF0, // 0\n  0x20, 0x60, 0x20, 0x20, 0x70, // 1\n  0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2\n  0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3\n  0x90, 0x90, 0xF0, 0x10, 0x10, // 4\n  0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5\n  0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6\n  0xF0, 0x10, 0x20, 0x40, 0x40, // 7\n  0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8\n  0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9\n  0xF0, 0x90, 0xF0, 0x90, 0x90, // A\n  0xE0, 0x90, 0xE0, 0x90, 0xE0, // B\n  0xF0, 0x80, 0x80, 0x80, 0xF0, // C\n  0xE0, 0x90, 0x90, 0x90, 0xE0, // D\n  0xF0, 0x80, 0xF0, 0x80, 0xF0, // E\n  0xF0, 0x80, 0xF0, 0x80, 0x80, // F\n]);\n","import { OFFSET, SIZE } from \"./constants\";\nimport * as t from \"./interface\";\n\nclass Opcode {\n  raw = 0;\n\n  get addr() {\n    return (this.raw & 0x0FFF);\n  }\n  get byte() {\n    return (this.raw & 0x00FF);\n  }\n  get hi()   {\n    return (this.raw & 0xF000) >> 12;\n  }\n  get lo()   {\n    return (this.raw & 0x000F);\n  }\n  get x()    {\n    return (this.raw & 0x0F00) >>  8;\n  }\n  get y()    {\n    return (this.raw & 0x00F0) >>  4;\n  }\n}\n\nclass ProgramCounter {\n  pc = OFFSET.PROGRAM_START;\n  sp = 0;\n  stack = new Uint16Array(SIZE.STACK_SIZE);\n  opcode = new Opcode();\n\n  constructor(private RAM: Uint8Array) {\n  }\n\n  jump(addr: number) {\n    this.pc = addr;\n  }\n\n  push() {\n    this.stack[this.sp++] = this.pc;\n  }\n\n  pop() {\n    this.pc = this.stack[--this.sp];\n  }\n\n  skip() {\n    this.pc += 2;\n  }\n\n  next(): t.OpCode {\n    let hi = this.RAM[this.pc] << 8;\n    let lo = this.RAM[this.pc + 1];\n    this.opcode.raw = hi | lo;\n    this.pc += 2;\n    return this.opcode;\n  }\n}\n\nexport default function createProgramCounter(RAM: Uint8Array): t.ProgramCounter {\n  return new ProgramCounter(RAM);\n}\n","import { SIZE } from \"./constants\";\nimport { OpCode, ProgramCounter } from \"./interface\";\nimport createProgramCounter from \"./program_counter\";\n\nexport interface VirtualMachine {\n  RAM: Uint8Array;\n\n  pixels: Uint8Array;\n  draw(): void;\n\n  soundTimer: number;\n  delayTimer: number;\n\n  keys: Uint8Array;\n  waitForKey(callback: (key: number) => void): void;\n}\n\nexport interface Operations {\n  execOp(): void;\n}\n\nexport default function createOperations(vm: VirtualMachine): Operations {\n  interface OpTable {\n    [index: number]: (opcode: OpCode) => void;\n  }\n\n  const { RAM, pixels, keys } = vm;\n\n  const programCounter = createProgramCounter(RAM);\n  const V = new Uint8Array(SIZE.REGISTER_SIZE);\n\n  let I = 0;\n\n  const Op: OpTable = [];\n  const Op0x0: OpTable = {};\n  const Op0x8: OpTable = {};\n  const Op0xE: OpTable = {};\n  const Op0xF: OpTable = {};\n\n  // Dispatch to 0xxx Ops\n  Op[0x0] = function (opcode) {\n    Op0x0[opcode.byte](opcode);\n  }\n\n  // 00E0 - CLS\n  Op0x0[0xE0] = function CLR() {\n    pixels.fill(0);\n    vm.draw();\n  }\n\n  // 00EE - RET\n  Op0x0[0xEE] = function RET() {\n    programCounter.pop();\n  }\n\n  // 1nnn - JP addr\n  Op[0x1] = function JP_addr({ addr }) {\n    programCounter.jump(addr);\n  }\n\n  // 2nnn - CALL addr\n  Op[0x2] = function CALL_addr({ addr }) {\n    programCounter.push();\n    programCounter.jump(addr);\n  }\n\n  // 3xkk - SE Vx, byte\n  Op[0x3] = function SE_Vx_byte({ x, byte }) {\n    if (V[x] === byte) programCounter.skip();\n  }\n\n  // 4xkk - SNE Vx, byte\n  Op[0x4] = function SNE_Vx_byte({ x, byte }) {\n    if (V[x] !== byte) programCounter.skip();\n  }\n\n  // 5xy0 - SE Vx, Vy\n  Op[0x5] = function SE_Vx_Vy({ x, y }) {\n    if (V[x] === V[y]) programCounter.skip();\n  }\n\n  // 6xkk - LD Vx, byte\n  Op[0x6] = function LD_Vx_byte({ x, byte }) {\n    V[x] = byte;\n  }\n\n  // 7xkk - ADD Vx, byte\n  Op[0x7] = function ADD_Vx_byte({ x, byte }) {\n    V[x] += byte;\n  }\n\n  // Dispatch to 8xxn Ops\n  Op[0x8] = function (opcode) {\n    Op0x8[opcode.lo](opcode);\n  }\n\n  // 8xy0 - LD Vx, Vy\n  Op0x8[0x0] = function LD_Vx_Vy({ x, y }) {\n    V[x] = V[y];\n  }\n\n  // 8xy1 - OR Vx, Vy\n  Op0x8[0x1] = function OR_Vx_Vy({ x, y }) {\n    V[x] |= V[y];\n  }\n\n  // 8xy2 - AND Vx, Vy\n  Op0x8[0x2] = function AND_Vx_Vy({ x, y }) {\n    V[x] &= V[y];\n  }\n\n  // 8xy3 - XOR Vx, Vy\n  Op0x8[0x3] = function XOR_Vx_Vy({ x, y }) {\n    V[x] ^= V[y];\n  }\n\n  // 8xy4 - ADD Vx, Vy\n  Op0x8[0x4] = function ADD_Vx_Vy({ x, y }) {\n    let res = V[x] + V[y];\n    V[0xF] = res > 0xFF ? 1 : 0;\n    V[x] = res;\n  }\n\n  // 8xy5 - SUB Vx, Vy\n  Op0x8[0x5] = function SUB_Vx_Vy({ x, y }) {\n    let Vx = V[x];\n    let Vy = V[y];\n\n    // If Vx > Vy, then VF is set to 1, otherwise 0.\n    V[0xF] = Vx > Vy ? 1 : 0;\n    V[x] = Vx - Vy;\n  }\n\n  // 8xy6 - SHR Vx {, Vy}\n  Op0x8[0x6] = function SHR_Vx({ x }) {\n    let Vx = V[x];\n\n    V[0xF] = 0x1 & Vx;\n    V[x] = Vx >> 1;\n  }\n\n  // 8xy7 - SUBN Vx, Vy\n  Op0x8[0x7] = function SUBN_Vx_Vy({ x, y }) {\n    let Vx = V[x];\n    let Vy = V[y];\n\n    // If Vy > Vx, then VF is set to 1, otherwise 0.\n    V[0xF] = Vy > Vx ? 1 : 0;\n    V[x] = Vy - Vx; // will wrap when Uint8Array set\n  }\n\n  // 8xyE - SHL Vx {, Vy}\n  Op0x8[0xE] = function SHL_Vx_Vy({ x }) {\n    let Vx = V[x];\n\n    V[0xF] = Vx >> 7;\n    V[x] = Vx << 1;\n  }\n\n  // 9xy0 - SNE Vx, Vy\n  Op[0x9] = function SNE_Vx_Vy({ x, y }) {\n    if (V[x] !== V[y]) programCounter.skip();\n  }\n\n  // Annn - LD I, addr\n  Op[0xA] = function LD_I_addr({ addr }) {\n    I = addr;\n  }\n\n  // Bnnn - JP V0, addr\n  Op[0xB] = function JP_V0_addr({ addr }) {\n    programCounter.jump(V[0] + addr);\n  }\n\n  // Cxkk - RND Vx, byte\n  Op[0xC] = function RND_Vx_byte({ x, byte }) {\n    V[x] = (Math.random() * 0x100) & byte;\n  }\n\n  // Dxyn - DRW Vx, Vy, nibble\n  Op[0xD] = function DRW_Vx_Vy_n({ x, y, lo: n }) {\n    let Vx = V[x];\n    let Vy = V[y];\n    V[0xF] = 0;\n    for (let sy = 0; sy < n; sy++) {\n      let dy = (Vy + sy) % SIZE.SCREEN_HEIGHT;\n      let yline = RAM[I + sy];\n      for (let sx = 0; sx < 8; sx++) {\n        // loop over the bits of the byte\n        let px = (yline >> (7 - sx)) & 1;\n        let dx = (Vx + sx) % SIZE.SCREEN_WIDTH;\n        let idx = dy * SIZE.SCREEN_WIDTH + dx;\n        pixels[idx] ^= px;\n        V[0xF] |= pixels[idx] == 0 && px == 1 ? 1 : 0;\n      }\n    }\n\n    vm.draw();\n  }\n\n  // Dispatch to 9xxx Ops\n  Op[0xE] = function (opcode) {\n    Op0xE[ opcode.byte ](opcode);\n  }\n\n  // Ex9E - SKP Vx\n  Op0xE[0x9E] = function SKP_Vx(opcode) {\n\n    let { x } = opcode;\n\n    if (keys[ V[x] ] === 1) programCounter.skip();\n  }\n\n  // ExA1 - SKNP Vx\n  Op0xE[0xA1] = function SKNP_Vx(opcode) {\n\n    let { x } = opcode;\n\n    if (keys[ V[x] ] !== 1) programCounter.skip();\n  }\n\n  // Dispatch to Fxxx Ops\n  Op[0xF] = function (opcode) {\n    Op0xF[opcode.byte](opcode);\n  }\n\n  // Fx07 - LD Vx, DT\n  Op0xF[0x07] = function LD_Vx_DT(opcode) {\n    let { x } = opcode;\n\n    V[x] = vm.delayTimer;\n  }\n\n  // Fx0A - LD Vx, K\n  Op0xF[0x0A] = function LD_Vx_K(opcode) {\n    const { x } = opcode;\n\n    vm.waitForKey(key => V[x] = key);\n  }\n\n  // Fx15 - LD DT, Vx\n  Op0xF[0x15] = function LD_DT_Vx({ x }) {\n    vm.delayTimer = V[x];\n  }\n\n  // Fx18 - LD ST, Vx\n  Op0xF[0x18] = function LD_ST_Vx({ x }) {\n    vm.soundTimer = V[x];\n  }\n\n  // Fx1E - ADD I, Vx\n  Op0xF[0x1E] = function ADD_I_Vx({ x }) {\n    I += V[x];\n  }\n\n  // Fx29 - LD F, Vx\n  Op0xF[0x29] = function LD_F_Vx({ x }) {\n    I = V[x] * SIZE.FONT_WIDTH;\n  }\n\n  // Fx33 - LD BCD, Vx\n  Op0xF[0x33] = function LD_BCD_Vx({ x }) {\n    let Vx = V[x];\n\n    let bcd = (Vx / 100) | 0;\n    RAM[I] = bcd;\n    Vx -= bcd * 100;\n    bcd = (Vx / 10) | 0;\n    RAM[I + 1] = bcd;\n    Vx -= bcd * 10;\n    RAM[I + 2] = Vx;\n  }\n\n  // Fx55 - LD [I], Vx\n  Op0xF[0x55] = function LD_I_Vx({ x }) {\n    for(let i = 0; i <= x; i++) {\n      RAM[I + i] = V[i];\n    }\n  }\n\n  // Fx65 - LD Vx, [I]\n  Op0xF[0x65] = function LD_Vx_I({ x }) {\n    for(let i = 0; i <= x; i++) {\n      V[i] = RAM[I + i];\n    }\n  }\n\n  return {\n    execOp() {\n      let opcode = programCounter.next();\n      Op[opcode.hi](opcode);\n    }\n  }\n}\n","import { SIZE, FONT, OFFSET} from \"./constants\";\nimport createOperations, { Operations, VirtualMachine } from \"./operations\";\n\nexport interface VirtualMachineOuput {\n  draw(pixels: Uint8Array): void;\n  startTone(): void;\n  stopTone(): void;\n}\n\nexport interface VirtualMachineInput {\n  loadROM(ROM: Uint8Array): void;\n  keyUp(key: number): void;\n  keyDown(key: number): void;\n}\n\nexport default function createVirtualMachine(delegate: VirtualMachineOuput): VirtualMachineInput {\n  const RAM = new Uint8Array(SIZE.RAM_SIZE);\n  const pixels = new Uint8Array(SIZE.SCREEN_SIZE);\n  const keys = new Uint8Array(SIZE.KEY_SIZE);\n  const vm: VirtualMachine = {\n    RAM,\n    pixels,\n    keys,\n    draw() {\n      delegate.draw(pixels);\n    },\n    soundTimer: 0,\n    delayTimer: 0,\n    waitForKey(cb) {\n      waitForKeyCallback = cb;\n      pause();\n    }\n  };\n\n  let waitForKeyCallback: ((key: number) => void) | undefined;\n  let interval: number;\n  let operations: Operations;\n\n  let lastTick: number;\n  let cycleCount: number;\n  let idealCount: number;\n\n  let soundOn = false;\n  let paused = false;\n  let start = Date.now();\n\n  function flush() {\n    while (!paused) {\n      let elapsed = Date.now() - start;\n      // 600hz\n      let idealCycles = (elapsed * 600 / 1000) | 0;\n      if (cycleCount >= idealCycles) {\n        break;\n      }\n\n      for (; cycleCount < idealCycles; cycleCount++) {\n        operations.execOp();\n        if (paused) return;\n\n        // decrement at 60hz\n        if (cycleCount % 10 === 0) {\n          if (vm.delayTimer > 0) {\n            vm.delayTimer--;\n          }\n          if (vm.soundTimer > 0) {\n            vm.soundTimer--;\n          }\n        }\n        if (vm.soundTimer > 0) {\n          if (!soundOn) {\n            soundOn = true;\n            delegate.startTone();\n          }\n        } else {\n          if (soundOn) {\n            soundOn = false;\n            delegate.stopTone();\n          }\n        }\n      }\n    }\n  }\n\n  function pause() {\n    clearInterval(interval);\n    delegate.stopTone();\n    soundOn = false;\n    paused = true;\n  }\n\n  function resume() {\n    start = Date.now();\n    cycleCount = 0;\n    interval = setInterval(flush, 16);\n    paused = false;\n  }\n\n  return {\n    loadROM(ROM) {\n      pause();\n      RAM.set(FONT);\n      RAM.fill(0, FONT.length, OFFSET.PROGRAM_START);\n      RAM.set(ROM, OFFSET.PROGRAM_START);\n      RAM.fill(0, OFFSET.PROGRAM_START + ROM.length);\n      pixels.fill(0);\n      operations = createOperations(vm);\n      resume();\n    },\n    keyUp(key) {\n      keys[key] = 0;\n      flush();\n    },\n    keyDown(key) {\n      if (waitForKeyCallback) {\n        waitForKeyCallback(key);\n        waitForKeyCallback = undefined;\n        resume();\n      }\n      keys[key] = 1;\n      flush();\n    }\n  }\n}\n","import createVirtualMachine from \"./vm\";\n\nconst vm = createVirtualMachine({\n  draw(pixels) {\n    postMessage({\n      cmd: \"draw\",\n      pixels\n    });\n  },\n  startTone() {\n    postMessage({\n      cmd: \"startTone\"\n    });\n  },\n  stopTone() {\n    postMessage({\n      cmd: \"stopTone\"\n    });\n  }\n});\n\nfunction readROMFile(file: File) {\n  let reader = new FileReaderSync();\n  let buffer = reader.readAsArrayBuffer(file);\n  vm.loadROM(new Uint8Array(buffer));\n}\n\nonmessage = function(msg: MessageEvent) {\n  switch (msg.data.cmd) {\n    case \"load\":\n      readROMFile(msg.data.rom);\n      break;\n    case \"keydown\":\n      vm.keyDown(msg.data.key);\n      break;\n    case \"keyup\":\n      vm.keyUp(msg.data.key);\n      break;\n  }\n}\n"],"names":["const","let"],"mappings":"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"}